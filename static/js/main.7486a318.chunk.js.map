{"version":3,"sources":["images lazy /^/.//.*$/ groupOptions: {} namespace object","api/actions.ts","api/types.ts","api/lib.ts","api/logic.ts","api/reducers.ts","api/store.ts","components/Files.tsx","components/Footer.tsx","components/Header.tsx","components/Summary.tsx","components/App.tsx","index.tsx"],"names":["map","./animals/alligator.png","./animals/badger.png","./animals/bear.png","./animals/budgie.png","./animals/bumblebee.png","./animals/cat.png","./animals/chicken.png","./animals/cow.png","./animals/crab.png","./animals/cute-hamster.png","./animals/deer.png","./animals/dog.png","./animals/dolphin.png","./animals/dove.png","./animals/elephant.png","./animals/falcon.png","./animals/fish.png","./animals/flamingo.png","./animals/fox.png","./animals/frog.png","./animals/grasshopper.png","./animals/hornet.png","./animals/horse.png","./animals/hummingbird.png","./animals/kangaroo.png","./animals/kiwi-bird.png","./animals/ladybird.png","./animals/leopard.png","./animals/lion.png","./animals/llama.png","./animals/monarch-butterfly.png","./animals/mouse-animal.png","./animals/octopus.png","./animals/orca.png","./animals/owl.png","./animals/panda.png","./animals/parrot.png","./animals/peacock.png","./animals/pig.png","./animals/prawn.png","./animals/puffin-bird.png","./animals/rabbit.png","./animals/rhinoceros.png","./animals/seal.png","./animals/sheep.png","./animals/sloth.png","./animals/snail.png","./animals/snake.png","./animals/squirrel.png","./animals/starfish.png","./animals/stork.png","./animals/swan.png","./animals/turtle.png","./animals/unicorn.png","./animals/whale.png","./animals/wolf.png","./animals/zebra.png","./exampleFiles","./exampleFiles.json","./ui/remove-cursor.png","webpackAsyncContext","req","ids","Promise","all","slice","__webpack_require__","e","then","id","t","resolve","Error","code","keys","Object","module","exports","appendImages","images","type","payload","removeAll","plains","n","symbols","Math","pow","symbolsPerCard","fileToDataUrl","file","reject","reader","FileReader","onerror","onload","result","readAsDataURL","getImageRatio","dataUrl","img","Image","height","width","src","sleep","arguments","length","undefined","r","setTimeout","generatePdf","cards","d","toConsumableArray","Array","shuffle","concat","flatMap","a","b","c","generateCards","card","s","columnsPerPage","floor","pageWidth","rowsPerPage","cardsPerPage","columnWidth","rowHeight","pdf","JsPDF","chunk","forEach","page","addPage","i","x","y","circle","k1","image","k2","_loop2","size","random","max","ratio","some","s2","push","_loop","_s$image","base64src","addImage","logic","createLogic","process","_process","asyncToGenerator","regenerator_default","mark","_callee2","_ref","dispatch","done","action","wrap","_context2","prev","next","_ref2","_callee","_context","sent","t0","t1","uniqueId","t2","t3","name","abrupt","title","stop","_x4","apply","this","_x","_x2","_x3","latest","validate","_ref3","allow","getState","processing","_process2","_x5","_x6","_x7","toString","_ref5","_callee3","_ref4","_context3","save","returnPromise","window","open","URL","createObjectURL","output","_x8","_x9","_x10","_process3","_callee5","obj","_context5","exampleFiles","_ref6","_callee4","_context4","default","_x14","_x11","_x12","_x13","initialState","createStore","state","objectSpread","filter","composeWithDevTools","applyMiddleware","createLogicMiddleware","connect","loadExamples","uploadImages","files","removeImage","react_default","createElement","Container","className","Divider","horizontal","Button","Group","primary","as","htmlFor","Icon","Or","text","onClick","onChange","target","multiple","style","display","accept","Segment","basic","textAlign","Image_Image","key","alt","Footer","inverted","vertical","href","HeaderComponent","Header","content","count","findLastIndex","activePlain","nextPlain","activeProgress","nextProgress","raised","Progress","percent","attached","color","autoSuccess","Fragment","Subheader","positive","disabled","loading","App","components_Header","components_Files","components_Summary","components_Footer","ReactDOM","render","es","store","components_App","document","getElementById"],"mappings":"+0CAAA,IAAAA,EAAA,CACAC,0BAAA,CACA,IACA,EACA,GAEAC,uBAAA,CACA,IACA,EACA,GAEAC,qBAAA,CACA,IACA,EACA,GAEAC,uBAAA,CACA,IACA,EACA,GAEAC,0BAAA,CACA,IACA,EACA,GAEAC,oBAAA,CACA,IACA,EACA,GAEAC,wBAAA,CACA,IACA,EACA,GAEAC,oBAAA,CACA,IACA,EACA,IAEAC,qBAAA,CACA,IACA,EACA,IAEAC,6BAAA,CACA,IACA,EACA,IAEAC,qBAAA,CACA,IACA,EACA,IAEAC,oBAAA,CACA,IACA,EACA,IAEAC,wBAAA,CACA,IACA,EACA,IAEAC,qBAAA,CACA,IACA,EACA,IAEAC,yBAAA,CACA,IACA,EACA,IAEAC,uBAAA,CACA,IACA,EACA,IAEAC,qBAAA,CACA,IACA,EACA,IAEAC,yBAAA,CACA,IACA,EACA,IAEAC,oBAAA,CACA,IACA,EACA,IAEAC,qBAAA,CACA,IACA,EACA,IAEAC,4BAAA,CACA,IACA,EACA,IAEAC,uBAAA,CACA,IACA,EACA,IAEAC,sBAAA,CACA,IACA,EACA,IAEAC,4BAAA,CACA,IACA,EACA,IAEAC,yBAAA,CACA,IACA,EACA,IAEAC,0BAAA,CACA,IACA,EACA,IAEAC,yBAAA,CACA,IACA,EACA,IAEAC,wBAAA,CACA,IACA,EACA,IAEAC,qBAAA,CACA,IACA,EACA,IAEAC,sBAAA,CACA,IACA,EACA,IAEAC,kCAAA,CACA,IACA,EACA,IAEAC,6BAAA,CACA,IACA,EACA,IAEAC,wBAAA,CACA,IACA,EACA,IAEAC,qBAAA,CACA,IACA,EACA,IAEAC,oBAAA,CACA,IACA,EACA,IAEAC,sBAAA,CACA,IACA,EACA,IAEAC,uBAAA,CACA,IACA,EACA,IAEAC,wBAAA,CACA,IACA,EACA,IAEAC,oBAAA,CACA,IACA,EACA,IAEAC,sBAAA,CACA,IACA,EACA,IAEAC,4BAAA,CACA,IACA,EACA,IAEAC,uBAAA,CACA,IACA,EACA,IAEAC,2BAAA,CACA,IACA,EACA,IAEAC,qBAAA,CACA,IACA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","file":"static/js/main.7486a318.chunk.js","sourcesContent":["var map = {\n\t\"./animals/alligator.png\": [\n\t\t400,\n\t\t7,\n\t\t3\n\t],\n\t\"./animals/badger.png\": [\n\t\t401,\n\t\t7,\n\t\t4\n\t],\n\t\"./animals/bear.png\": [\n\t\t402,\n\t\t7,\n\t\t5\n\t],\n\t\"./animals/budgie.png\": [\n\t\t403,\n\t\t7,\n\t\t6\n\t],\n\t\"./animals/bumblebee.png\": [\n\t\t404,\n\t\t7,\n\t\t7\n\t],\n\t\"./animals/cat.png\": [\n\t\t405,\n\t\t7,\n\t\t8\n\t],\n\t\"./animals/chicken.png\": [\n\t\t406,\n\t\t7,\n\t\t9\n\t],\n\t\"./animals/cow.png\": [\n\t\t407,\n\t\t7,\n\t\t10\n\t],\n\t\"./animals/crab.png\": [\n\t\t408,\n\t\t7,\n\t\t11\n\t],\n\t\"./animals/cute-hamster.png\": [\n\t\t409,\n\t\t7,\n\t\t12\n\t],\n\t\"./animals/deer.png\": [\n\t\t410,\n\t\t7,\n\t\t13\n\t],\n\t\"./animals/dog.png\": [\n\t\t411,\n\t\t7,\n\t\t14\n\t],\n\t\"./animals/dolphin.png\": [\n\t\t412,\n\t\t7,\n\t\t15\n\t],\n\t\"./animals/dove.png\": [\n\t\t413,\n\t\t7,\n\t\t16\n\t],\n\t\"./animals/elephant.png\": [\n\t\t414,\n\t\t7,\n\t\t17\n\t],\n\t\"./animals/falcon.png\": [\n\t\t415,\n\t\t7,\n\t\t18\n\t],\n\t\"./animals/fish.png\": [\n\t\t416,\n\t\t7,\n\t\t19\n\t],\n\t\"./animals/flamingo.png\": [\n\t\t417,\n\t\t7,\n\t\t20\n\t],\n\t\"./animals/fox.png\": [\n\t\t418,\n\t\t7,\n\t\t21\n\t],\n\t\"./animals/frog.png\": [\n\t\t419,\n\t\t7,\n\t\t22\n\t],\n\t\"./animals/grasshopper.png\": [\n\t\t420,\n\t\t7,\n\t\t23\n\t],\n\t\"./animals/hornet.png\": [\n\t\t421,\n\t\t7,\n\t\t24\n\t],\n\t\"./animals/horse.png\": [\n\t\t422,\n\t\t7,\n\t\t25\n\t],\n\t\"./animals/hummingbird.png\": [\n\t\t423,\n\t\t7,\n\t\t26\n\t],\n\t\"./animals/kangaroo.png\": [\n\t\t424,\n\t\t7,\n\t\t27\n\t],\n\t\"./animals/kiwi-bird.png\": [\n\t\t425,\n\t\t7,\n\t\t28\n\t],\n\t\"./animals/ladybird.png\": [\n\t\t426,\n\t\t7,\n\t\t29\n\t],\n\t\"./animals/leopard.png\": [\n\t\t427,\n\t\t7,\n\t\t30\n\t],\n\t\"./animals/lion.png\": [\n\t\t428,\n\t\t7,\n\t\t31\n\t],\n\t\"./animals/llama.png\": [\n\t\t429,\n\t\t7,\n\t\t32\n\t],\n\t\"./animals/monarch-butterfly.png\": [\n\t\t430,\n\t\t7,\n\t\t33\n\t],\n\t\"./animals/mouse-animal.png\": [\n\t\t431,\n\t\t7,\n\t\t34\n\t],\n\t\"./animals/octopus.png\": [\n\t\t432,\n\t\t7,\n\t\t35\n\t],\n\t\"./animals/orca.png\": [\n\t\t433,\n\t\t7,\n\t\t36\n\t],\n\t\"./animals/owl.png\": [\n\t\t434,\n\t\t7,\n\t\t37\n\t],\n\t\"./animals/panda.png\": [\n\t\t435,\n\t\t7,\n\t\t38\n\t],\n\t\"./animals/parrot.png\": [\n\t\t436,\n\t\t7,\n\t\t39\n\t],\n\t\"./animals/peacock.png\": [\n\t\t437,\n\t\t7,\n\t\t40\n\t],\n\t\"./animals/pig.png\": [\n\t\t438,\n\t\t7,\n\t\t41\n\t],\n\t\"./animals/prawn.png\": [\n\t\t439,\n\t\t7,\n\t\t42\n\t],\n\t\"./animals/puffin-bird.png\": [\n\t\t440,\n\t\t7,\n\t\t43\n\t],\n\t\"./animals/rabbit.png\": [\n\t\t441,\n\t\t7,\n\t\t44\n\t],\n\t\"./animals/rhinoceros.png\": [\n\t\t442,\n\t\t7,\n\t\t45\n\t],\n\t\"./animals/seal.png\": [\n\t\t443,\n\t\t7,\n\t\t46\n\t],\n\t\"./animals/sheep.png\": [\n\t\t444,\n\t\t7,\n\t\t47\n\t],\n\t\"./animals/sloth.png\": [\n\t\t445,\n\t\t7,\n\t\t48\n\t],\n\t\"./animals/snail.png\": [\n\t\t446,\n\t\t7,\n\t\t49\n\t],\n\t\"./animals/snake.png\": [\n\t\t447,\n\t\t7,\n\t\t50\n\t],\n\t\"./animals/squirrel.png\": [\n\t\t448,\n\t\t7,\n\t\t51\n\t],\n\t\"./animals/starfish.png\": [\n\t\t449,\n\t\t7,\n\t\t52\n\t],\n\t\"./animals/stork.png\": [\n\t\t450,\n\t\t7,\n\t\t53\n\t],\n\t\"./animals/swan.png\": [\n\t\t451,\n\t\t7,\n\t\t54\n\t],\n\t\"./animals/turtle.png\": [\n\t\t452,\n\t\t7,\n\t\t55\n\t],\n\t\"./animals/unicorn.png\": [\n\t\t453,\n\t\t7,\n\t\t56\n\t],\n\t\"./animals/whale.png\": [\n\t\t454,\n\t\t7,\n\t\t57\n\t],\n\t\"./animals/wolf.png\": [\n\t\t455,\n\t\t7,\n\t\t58\n\t],\n\t\"./animals/zebra.png\": [\n\t\t456,\n\t\t7,\n\t\t59\n\t],\n\t\"./exampleFiles\": [\n\t\t111,\n\t\t3\n\t],\n\t\"./exampleFiles.json\": [\n\t\t111,\n\t\t3\n\t],\n\t\"./ui/remove-cursor.png\": [\n\t\t457,\n\t\t7,\n\t\t60\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 275;\nmodule.exports = webpackAsyncContext;","import {\n  APPEND_IMAGES,\n  AppendImagesAction,\n  CardImage,\n  GENERATE_PDF,\n  GENERATE_PDF_COMPLETE,\n  GeneratePdfAction,\n  GeneratePdfCompleteAction,\n  LOAD_EXAMPLES,\n  LoadExamplesAction,\n  Prime,\n  REMOVE_ALL,\n  REMOVE_IMAGE,\n  RemoveAllAction,\n  RemoveImageAction,\n  UPLOAD_IMAGES,\n  UploadImagesAction,\n} from './types';\n\nexport const appendImages = (images: CardImage[]): AppendImagesAction => ({\n  type: APPEND_IMAGES,\n  payload: images,\n});\n\nexport const generatePdf = (n: Prime): GeneratePdfAction => ({\n  type: GENERATE_PDF,\n  payload: { n },\n});\n\nexport const generatePdfComplete = (): GeneratePdfCompleteAction => ({\n  type: GENERATE_PDF_COMPLETE,\n});\n\nexport const loadExamples = (): LoadExamplesAction => ({\n  type: LOAD_EXAMPLES,\n});\n\nexport const removeAll = (): RemoveAllAction => ({\n  type: REMOVE_ALL,\n});\n\nexport const removeImage = (id: string): RemoveImageAction => ({\n  type: REMOVE_IMAGE,\n  payload: id,\n});\n\nexport const uploadImages = (files: FileList | null): UploadImagesAction => ({\n  type: UPLOAD_IMAGES,\n  payload: files ? [...files] : [],\n});\n","// Redux store state\nexport interface State {\n  images: CardImage[];\n  processing: boolean;\n}\n\n// Possible redux action types\nexport const APPEND_IMAGES = 'APPEND_IMAGES';\nexport const GENERATE_PDF = 'GENERATE_PDF';\nexport const GENERATE_PDF_COMPLETE = 'GENERATE_PDF_COMPLETE';\nexport const LOAD_EXAMPLES = 'LOAD_EXAMPLES';\nexport const REMOVE_ALL = 'REMOVE_ALL';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const UPLOAD_IMAGES = 'UPLOAD_IMAGES';\n\n// Payload types\nexport type Prime = 2 | 3 | 5 | 7 | 11;\n\nexport interface CardImage {\n  base64src: string;\n  id: string;\n  ratio: number;\n  title?: string;\n}\n\nexport interface CardSymbol {\n  image: CardImage;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\n// Action types\nexport interface AppendImagesAction {\n  type: typeof APPEND_IMAGES;\n  payload: CardImage[];\n}\n\nexport interface GeneratePdfAction {\n  type: typeof GENERATE_PDF;\n  payload: {\n    n: Prime;\n  };\n}\n\nexport interface GeneratePdfCompleteAction {\n  type: typeof GENERATE_PDF_COMPLETE;\n}\n\nexport interface LoadExamplesAction {\n  type: typeof LOAD_EXAMPLES;\n}\n\nexport interface RemoveAllAction {\n  type: typeof REMOVE_ALL;\n}\n\nexport interface RemoveImageAction {\n  type: typeof REMOVE_IMAGE;\n  payload: string;\n}\n\nexport interface UploadImagesAction {\n  type: typeof UPLOAD_IMAGES;\n  payload: File[];\n}\n\nexport type Actions =\n  | AppendImagesAction\n  | GeneratePdfAction\n  | GeneratePdfCompleteAction\n  | LoadExamplesAction\n  | RemoveAllAction\n  | RemoveImageAction\n  | UploadImagesAction;\n","import JsPDF from 'jspdf';\nimport chunk from 'lodash/chunk';\nimport random from 'lodash/random';\nimport shuffle from 'lodash/shuffle';\n\nimport { CardImage, CardSymbol, Prime } from './types';\n\n/**\n * Generate supported plains (dimensions) according to the Ray-Chaudhuri–Wilson theorem\n * n - prime number\n * @see https://math.stackexchange.com/questions/36798/what-is-the-math-behind-the-game-spot-it\n */\nexport const plains = ([2, 3, 5, 7, 11] as Prime[]).map((n: Prime) => ({\n  n,\n  symbols: n ** 2 + n + 1,\n  symbolsPerCard: n + 1,\n}));\n\n/**\n * Generate unique cards for available plains\n * @see https://math.stackexchange.com/questions/1303497/what-is-the-algorithm-to-generate-the-cards-in-the-game-dobble-known-as-spo\n */\nexport const generateCards = (n: Prime) => {\n  const d = [...Array(n).keys()];\n\n  return shuffle([\n    shuffle([...d, n]),\n    ...d.flatMap(a => [\n      shuffle([0, ...d.map(b => n + 1 + n * a + b)]),\n      ...d.map(b =>\n        shuffle([a + 1, ...d.map(c => n + 1 + n * c + ((a * c + b) % n))]),\n      ),\n    ]),\n  ]);\n};\n\n/**\n * Promisify the FileReader::readAsDataURL method\n */\nexport const fileToDataUrl = (file: File): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = () => resolve(reader.result as string);\n    reader.readAsDataURL(file);\n  });\n\n/**\n * Promisify the FileReader::readAsDataURL method\n */\nexport const getImageRatio = (dataUrl: string): Promise<number> =>\n  new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onerror = reject;\n    img.onload = () => resolve(img.height / img.width);\n    img.src = dataUrl;\n  });\n\n/**\n * Unlock event loop and wait\n */\nexport const sleep = (t: number = 0) => new Promise(r => setTimeout(r, t));\n\n/**\n * Generate PDF instance with cards\n */\nexport const generatePdf = (\n  images: CardImage[] = [],\n  options: { n: Prime },\n): JsPDF => {\n  const { n } = options;\n\n  // Apply images to generated card sequences\n  const cards = generateCards(n).map(card => card.map(s => images[s]));\n\n  // PDF sizes in mm\n  const pageWidth = 210; // A4\n  const pageHeight = 297; // A4\n  const cardRadius = 42; // Size of a single card\n  const columnsPerPage = Math.floor(pageWidth / (cardRadius * 2));\n  const rowsPerPage = Math.floor(pageHeight / (cardRadius * 2));\n  const cardsPerPage = columnsPerPage * rowsPerPage;\n  const columnWidth = pageWidth / columnsPerPage;\n  const rowHeight = pageHeight / rowsPerPage;\n\n  const pdf = new JsPDF();\n\n  // Split cards into pages\n  chunk(cards, cardsPerPage).forEach((cards, page) => {\n    if (page > 0) {\n      pdf.addPage();\n    }\n\n    cards.forEach((card, i) => {\n      // Determine middle of the card\n      const x = (i % 2) * columnWidth + columnWidth / 2;\n      const y = Math.floor(i / 2) * rowHeight + rowHeight / 2;\n\n      // Draw outline\n      pdf.circle(x, y, cardRadius, 'S');\n\n      // Prepare randomly aligned symbols on the card\n      const symbols: CardSymbol[] = [];\n\n      // Brute-force it until it will look good :)\n      let k1 = 100;\n      while (k1-- > 0) {\n        card.forEach(image => {\n          let k2 = 100;\n          while (k2-- > 0) {\n            const size = random(\n              // Try a smaller image after each iteration, up to some limit\n              Math.max((0.4 * k2) / 100, 0.2),\n              // Limit upper size for high n values\n              n < 7 ? 1 : 0.6,\n            );\n\n            const s: CardSymbol = {\n              x: random(-1, 1, true),\n              y: random(-1, 1, true),\n              width: size,\n              height: size * image.ratio,\n              image,\n            };\n\n            // Test if element is within the circle\n            if (\n              (s.x + s.width) ** 2 + s.y ** 2 > 1 ||\n              (s.x + s.width) ** 2 + (s.y + s.height) ** 2 > 1 ||\n              s.x ** 2 + s.y ** 2 > 1 ||\n              s.x ** 2 + (s.y + s.height) ** 2 > 1\n            ) {\n              continue;\n            }\n\n            // Test if there is no collision with other symbols\n            if (\n              symbols.some(\n                s2 =>\n                  s.x < s2.x + s2.width &&\n                  s.x + s.width > s2.x &&\n                  s.y < s2.y + s2.height &&\n                  s.y + s.height > s2.y,\n              )\n            ) {\n              continue;\n            }\n\n            // Everything ok, add it to the collection\n            symbols.push(s);\n            break;\n          }\n        });\n\n        if (symbols.length !== n + 1) {\n          // Not able to generate a layout, start from scratch:\n          symbols.length = 0;\n          continue;\n        }\n\n        // Everything ok\n        break;\n      }\n\n      if (symbols.length !== n + 1) {\n        throw new Error('Could not generate a possible card layout');\n      }\n\n      symbols.forEach(s => {\n        const { base64src, id } = s.image;\n        pdf.addImage(\n          base64src,\n          'PNG',\n          x + s.x * cardRadius,\n          y + s.y * cardRadius,\n          cardRadius * s.width,\n          cardRadius * s.height,\n          id,\n          'NONE',\n          0, // random(0, 359),\n        );\n      });\n    });\n  });\n\n  return pdf;\n};\n","import shuffle from 'lodash/shuffle';\nimport uniqueId from 'lodash/uniqueId';\nimport { createLogic, Logic } from 'redux-logic';\n\nimport exampleFiles from '../images/exampleFiles.json';\n\nimport { appendImages, generatePdfComplete, removeAll } from './actions';\nimport { fileToDataUrl, generatePdf, getImageRatio, sleep } from './lib';\nimport {\n  CardImage,\n  GENERATE_PDF,\n  GeneratePdfAction,\n  LOAD_EXAMPLES,\n  State,\n  UPLOAD_IMAGES,\n  UploadImagesAction,\n} from './types';\n\nexport const uploadImagesLogic = createLogic({\n  type: UPLOAD_IMAGES,\n  async process({ action }: { action: UploadImagesAction }, dispatch, done) {\n    const images: CardImage[] = await Promise.all(\n      action.payload.map(async image => {\n        const base64src = await fileToDataUrl(image);\n        return {\n          base64src,\n          id: uniqueId('image_'),\n          ratio: await getImageRatio(base64src),\n          title: image.name,\n        };\n      }),\n    );\n\n    dispatch(appendImages(images));\n    done();\n  },\n});\n\nexport const generatePdfLogic = createLogic({\n  type: GENERATE_PDF,\n  latest: true,\n  validate(\n    { action, getState }: { action: GeneratePdfAction; getState: () => State },\n    allow,\n    reject,\n  ) {\n    const { processing } = getState();\n    if (processing) {\n      // Allow only single operation at a time\n      reject(action);\n    } else {\n      allow(action);\n    }\n  },\n  async process(\n    { action, getState }: { action: GeneratePdfAction; getState: () => State },\n    dispatch,\n    done,\n  ) {\n    const images: CardImage[] = getState().images;\n\n    // Unlock the thread before heavy computations starts\n    await sleep(10);\n\n    const pdf = await generatePdf(images, action.payload);\n\n    if (process.env.NODE_ENV === 'production') {\n      // Force file download\n      await pdf.save('Cards.pdf', { returnPromise: true });\n    } else {\n      // Easier mode to preview during development\n      window.open(URL.createObjectURL(pdf.output('blob')));\n    }\n\n    dispatch(generatePdfComplete());\n    done();\n  },\n});\n\nexport const loadExamplesLogic = createLogic({\n  type: LOAD_EXAMPLES,\n  latest: true,\n  async process(obj, dispatch, done) {\n    dispatch(removeAll());\n\n    const images: CardImage[] = await Promise.all(\n      shuffle(exampleFiles).map(async file => {\n        const base64src = (await import(`../images/${file}`)).default;\n        return {\n          base64src,\n          id: uniqueId('image_'),\n          ratio: await getImageRatio(base64src),\n          title: file,\n        };\n      }),\n    );\n\n    dispatch(appendImages(images));\n    done();\n  },\n});\n\nexport default [\n  uploadImagesLogic,\n  generatePdfLogic,\n  loadExamplesLogic,\n] as Logic[];\n","import {\n  Actions,\n  APPEND_IMAGES,\n  GENERATE_PDF,\n  GENERATE_PDF_COMPLETE,\n  REMOVE_ALL,\n  REMOVE_IMAGE,\n  State,\n} from './types';\n\nconst initialState: State = {\n  images: [],\n  processing: false,\n};\n\nexport default function(state = initialState, action: Actions): State {\n  switch (action.type) {\n    case APPEND_IMAGES:\n      return {\n        ...state,\n        images: [...state.images, ...action.payload],\n      };\n    case GENERATE_PDF:\n      return {\n        ...state,\n        processing: true,\n      };\n    case GENERATE_PDF_COMPLETE:\n      return {\n        ...state,\n        processing: false,\n      };\n    case REMOVE_ALL:\n      return {\n        ...state,\n        images: [],\n      };\n    case REMOVE_IMAGE:\n      return {\n        ...state,\n        images: state.images.filter(image => image.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogicMiddleware } from 'redux-logic';\n\nimport logic from './logic';\nimport reducers from './reducers';\n\nexport type State = ReturnType<typeof reducers>;\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(createLogicMiddleware(logic))),\n);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Container,\n  Divider,\n  Icon,\n  Image,\n  Segment,\n} from 'semantic-ui-react';\n\nimport {\n  loadExamples,\n  removeAll,\n  removeImage,\n  uploadImages,\n} from '../api/actions';\nimport { State } from '../api/store';\nimport { CardImage } from '../api/types';\n\ninterface Props {\n  images: CardImage[];\n  loadExamples: typeof loadExamples;\n  removeAll: typeof removeAll;\n  removeImage: typeof removeImage;\n  uploadImages: typeof uploadImages;\n}\n\nconst Files: FC<Props> = ({\n  images,\n  loadExamples,\n  removeAll,\n  removeImage,\n  uploadImages,\n}) => (\n  <Container className=\"pusher\">\n    <Divider horizontal>\n      <Button.Group size=\"huge\">\n        <Button primary as=\"label\" htmlFor=\"fileUpload\">\n          <Icon name=\"cloud upload\" />\n          Upload images\n        </Button>\n        <Button.Or text=\"or\" />\n        <Button onClick={loadExamples}>\n          <Icon name=\"images outline\" />\n          Load examples\n        </Button>\n      </Button.Group>\n    </Divider>\n\n    <input\n      type=\"file\"\n      id=\"fileUpload\"\n      onChange={e => uploadImages(e.target.files)}\n      multiple\n      style={{ display: 'none' }}\n      accept=\".png,.jpg,.jpeg\"\n    />\n\n    <Segment basic textAlign=\"center\">\n      <Image.Group size=\"tiny\">\n        {images.map(({ id, base64src, title }) => (\n          <Image\n            key={id}\n            src={base64src}\n            onClick={() => removeImage(id)}\n            className=\"preview\"\n            title={title}\n            alt={title}\n          />\n        ))}\n      </Image.Group>\n      {images.length > 0 && (\n        <Button onClick={removeAll}>\n          <Icon name=\"trash\" />\n          Remove all images\n        </Button>\n      )}\n    </Segment>\n  </Container>\n);\n\nexport default connect(\n  (state: State) => ({ images: state.images }),\n  { removeAll, loadExamples, uploadImages, removeImage },\n)(Files);\n","import React from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\n\nconst Footer = () => (\n  <Segment inverted vertical className=\"footer\">\n    <Container text textAlign=\"center\">\n      This site is not affiliated in any way with Dobble, Spot It!, its creators\n      or distributors.\n      <br />\n      Dobble and Spot It! are trademarks of ASMODEE GROUP.\n      <br />\n      Example images by{' '}\n      <a href=\"https://icons8.com/\" target=\"_blank\">\n        icons8.com\n      </a>\n    </Container>\n  </Segment>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\n\nconst HeaderComponent = () => (\n  <Segment inverted textAlign=\"center\" vertical className=\"header\">\n    <Container text>\n      <Header\n        as=\"h1\"\n        content=\"Dobble-like generator\"\n        inverted\n        className=\"title\"\n      />\n      <Header\n        as=\"h2\"\n        content=\"Prepare and print cards with your own images\"\n        inverted\n        className=\"subtitle\"\n      />\n    </Container>\n  </Segment>\n);\n\nexport default HeaderComponent;\n","import findLastIndex from 'lodash/findLastIndex';\nimport React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Container,\n  Divider,\n  Header,\n  Icon,\n  Progress,\n  Segment,\n} from 'semantic-ui-react';\n\nimport { generatePdf } from '../api/actions';\nimport { plains } from '../api/lib';\nimport { State } from '../api/store';\nimport { CardImage } from '../api/types';\n\ninterface Props {\n  images: CardImage[];\n  plains: typeof plains;\n  processing: boolean;\n  generatePdf: typeof generatePdf;\n}\n\nconst Summary: FC<Props> = ({ images, plains, processing, generatePdf }) => {\n  const count = images.length;\n\n  const i = findLastIndex(plains, ({ symbols }) => count >= symbols);\n\n  const activePlain = plains[i] || null;\n  const nextPlain = plains[i + 1] || null;\n\n  const activeProgress = (count / (activePlain || nextPlain).symbols) * 100;\n  const nextProgress = nextPlain ? (count / nextPlain.symbols) * 100 : 100;\n\n  return (\n    <Container>\n      <Segment textAlign=\"center\" raised>\n        <Progress\n          percent={activeProgress}\n          attached=\"top\"\n          color=\"blue\"\n          autoSuccess\n        />\n        <Progress\n          percent={nextProgress}\n          attached=\"bottom\"\n          color=\"blue\"\n          autoSuccess\n        />\n\n        {activePlain && (\n          <>\n            <Header as=\"h1\" className=\"instructions\">\n              You can generate {activePlain.symbols} cards with{' '}\n              {activePlain.symbolsPerCard} images per card.\n              {count > activePlain.symbols && (\n                <Header.Subheader>\n                  You have uploaded too much images. Last{' '}\n                  {count - activePlain.symbols} images will not be used.\n                </Header.Subheader>\n              )}\n            </Header>\n            <Button\n              size=\"massive\"\n              positive\n              disabled={processing}\n              onClick={() => generatePdf(activePlain.n)}\n            >\n              <Icon loading={processing} name=\"file pdf outline\" />\n              Generate and download PDF file\n            </Button>\n          </>\n        )}\n\n        {activePlain && nextPlain && (\n          <Divider horizontal className=\"padded\">\n            Or\n          </Divider>\n        )}\n\n        {nextPlain && (\n          <Header as=\"h3\" className=\"instructions\">\n            Add {nextPlain.symbols - count} more images to generate{' '}\n            {nextPlain.symbols} cards with {nextPlain.symbolsPerCard} images per\n            card\n          </Header>\n        )}\n      </Segment>\n    </Container>\n  );\n};\n\nexport default connect(\n  (state: State) => ({\n    images: state.images,\n    plains,\n    processing: state.processing,\n  }),\n  { generatePdf },\n)(Summary);\n","import React from 'react';\n\nimport Files from './Files';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Summary from './Summary';\n\nconst App = () => (\n  <>\n    <Header />\n    <Files />\n    <Summary />\n    <Footer />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './api/store';\nimport App from './components/App';\nimport './styles.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}